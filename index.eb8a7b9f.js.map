{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Game.INITIAL_STATE;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.board = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var oldBoard = JSON.stringify(this.board);\n                for(var r = 0; r < this.board.length; r++){\n                    var row = this.board[r];\n                    row = this.stack(row);\n                    row = this.merge(row);\n                    row = this.stack(row);\n                    this.board[r] = row;\n                }\n                var newBoard = JSON.stringify(this.board);\n                if (oldBoard === newBoard) return;\n                this.checkWin();\n                this.addRandomCell();\n                this.checkGameOver();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var oldBoard = JSON.stringify(this.board);\n                for(var r = 0; r < this.board.length; r++){\n                    var row = this.board[r];\n                    row = row.reverse();\n                    row = this.stack(row);\n                    row = this.merge(row);\n                    row = this.stack(row);\n                    row = row.reverse();\n                    this.board[r] = row;\n                }\n                var newBoard = JSON.stringify(this.board);\n                if (oldBoard === newBoard) return;\n                this.checkWin();\n                this.addRandomCell();\n                this.checkGameOver();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(c) {\n                    var col = _this.board.map(function(r) {\n                        return r[c];\n                    });\n                    col = _this.stack(col);\n                    col = _this.merge(col);\n                    col = _this.stack(col);\n                    _this.updateColumn(c, col);\n                };\n                if (this.status !== \"playing\") return;\n                var oldBoard = JSON.stringify(this.board);\n                for(var c = 0; c < this.board.length; c++)_loop(c);\n                var newBoard = JSON.stringify(this.board);\n                if (oldBoard === newBoard) return;\n                this.checkWin();\n                this.addRandomCell();\n                this.checkGameOver();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(c) {\n                    var col = _this.board.map(function(r) {\n                        return r[c];\n                    });\n                    col = col.reverse();\n                    col = _this.stack(col);\n                    col = _this.merge(col);\n                    col = _this.stack(col);\n                    col = col.reverse();\n                    _this.updateColumn(c, col);\n                };\n                if (this.status !== \"playing\") return;\n                var oldBoard = JSON.stringify(this.board);\n                for(var c = 0; c < this.board.length; c++)_loop(c);\n                var newBoard = JSON.stringify(this.board);\n                if (oldBoard === newBoard) return;\n                this.checkWin();\n                this.addRandomCell();\n                this.checkGameOver();\n            }\n        },\n        {\n            key: \"updateColumn\",\n            value: function updateColumn(c, col) {\n                for(var r = 0; r < this.board.length; r++)this.board[r][c] = col[r];\n            }\n        },\n        {\n            key: \"filterZero\",\n            value: function filterZero(arr) {\n                return arr.filter(function(num) {\n                    return num !== 0;\n                });\n            }\n        },\n        {\n            key: \"stack\",\n            value: function stack(arr) {\n                var newArr = this.filterZero(arr);\n                while(newArr.length < this.board.length)newArr.push(0);\n                return newArr;\n            }\n        },\n        {\n            key: \"merge\",\n            value: function merge(arr) {\n                for(var i = 0; i < arr.length - 1; i++)if (arr[i] === arr[i + 1] && arr[i] !== 0) {\n                    arr[i] *= 2;\n                    arr[i + 1] = 0;\n                    this.score += arr[i];\n                }\n                return arr;\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                if (this.board.flat().includes(2048)) this.status = \"win\";\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.board.flat().includes(0)) return;\n                if (!this.checkHorizontal() && !this.checkVertical()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"checkHorizontal\",\n            value: function checkHorizontal() {\n                for(var r = 0; r < this.board.length; r++)for(var c = 0; c < this.board.length - 1; c++){\n                    if (this.board[r][c] === this.board[r][c + 1]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkVertical\",\n            value: function checkVertical() {\n                for(var r = 0; r < this.board.length - 1; r++)for(var c = 0; c < this.board.length; c++){\n                    if (this.board[r][c] === this.board[r + 1][c]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"addRandomCell\",\n            value: function addRandomCell() {\n                var emptyCells = this.board.reduce(function(acc, currentRow, rowIndex) {\n                    currentRow.forEach(function(cell, colIndex) {\n                        if (cell === 0) acc.push([\n                            rowIndex,\n                            colIndex\n                        ]);\n                    });\n                    return acc;\n                }, []);\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), row = _emptyCells_Math_floor[0], col = _emptyCells_Math_floor[1];\n                this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomCell();\n                this.addRandomCell();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = Game.INITIAL_STATE.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n                this.status = \"idle\";\n                this.score = 0;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$1e71eb4bef00f6b0)($3d28d7f1aac198f5$var$Game, \"INITIAL_STATE\", [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n]);\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$cells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$scoreContainer = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".button.start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message.message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message.message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message.message-lose\");\nvar $197cd56b15c33885$var$updateUI = function() {\n    var state = $197cd56b15c33885$var$game.getState();\n    $197cd56b15c33885$var$cells.forEach(function(cell, i) {\n        var row = Math.floor(i / 4);\n        var col = i % 4;\n        var cellValue = state[row][col];\n        if (cell.textContent !== cellValue.toString()) {\n            cell.textContent = cellValue === 0 ? \"\" : cellValue;\n            cell.className = \"field-cell field-cell--\".concat(cellValue);\n        }\n    });\n    $197cd56b15c33885$var$scoreContainer.textContent = $197cd56b15c33885$var$game.getScore();\n    switch($197cd56b15c33885$var$game.getStatus()){\n        case \"win\":\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n            break;\n        case \"playing\":\n            $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n            break;\n        default:\n            $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n    }\n};\nvar $197cd56b15c33885$var$handleMove = function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    e.preventDefault();\n    $197cd56b15c33885$var$updateUI();\n};\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") {\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$game.start();\n    } else {\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n        $197cd56b15c33885$var$startButton.classList.add(\"start\");\n        $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$game.restart();\n    }\n    $197cd56b15c33885$var$updateUI();\n});\ndocument.addEventListener(\"keydown\", $197cd56b15c33885$var$handleMove);\n$197cd56b15c33885$var$updateUI();\n\n})();\n//# sourceMappingURL=index.eb8a7b9f.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst cells = document.querySelectorAll('.field-cell');\nconst scoreContainer = document.querySelector('.game-score');\nconst startButton = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message.message-start');\nconst messageWin = document.querySelector('.message.message-win');\nconst messageLose = document.querySelector('.message.message-lose');\n\nconst updateUI = () => {\n  const state = game.getState();\n\n  cells.forEach((cell, i) => {\n    const row = Math.floor(i / 4);\n    const col = i % 4;\n    const cellValue = state[row][col];\n\n    if (cell.textContent !== cellValue.toString()) {\n      cell.textContent = cellValue === 0 ? '' : cellValue;\n      cell.className = `field-cell field-cell--${cellValue}`;\n    }\n  });\n\n  scoreContainer.textContent = game.getScore();\n\n  switch (game.getStatus()) {\n    case 'win':\n      messageWin.classList.remove('hidden');\n      messageLose.classList.add('hidden');\n      messageStart.classList.add('hidden');\n      break;\n\n    case 'lose':\n      messageLose.classList.remove('hidden');\n      messageWin.classList.add('hidden');\n      messageStart.classList.add('hidden');\n      break;\n\n    case 'playing':\n      messageLose.classList.add('hidden');\n      messageWin.classList.add('hidden');\n      messageStart.classList.add('hidden');\n      break;\n\n    default:\n      messageLose.classList.add('hidden');\n      messageWin.classList.add('hidden');\n      messageStart.classList.remove('hidden');\n  }\n};\n\nconst handleMove = (e) => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n\n    default:\n      return;\n  }\n  e.preventDefault();\n\n  updateUI();\n};\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n    startButton.classList.remove('start');\n    game.start();\n  } else {\n    startButton.textContent = 'Start';\n    startButton.classList.add('start');\n    startButton.classList.remove('restart');\n    game.restart();\n  }\n\n  updateUI();\n});\n\ndocument.addEventListener('keydown', handleMove);\n\nupdateUI();\n","'use strict';\n\nclass Game {\n  static INITIAL_STATE = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  constructor(initialState = Game.INITIAL_STATE) {\n    this.board = initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const oldBoard = JSON.stringify(this.board);\n\n    for (let r = 0; r < this.board.length; r++) {\n      let row = this.board[r];\n\n      row = this.stack(row);\n      row = this.merge(row);\n      row = this.stack(row);\n      this.board[r] = row;\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    if (oldBoard === newBoard) {\n      return;\n    }\n\n    this.checkWin();\n    this.addRandomCell();\n    this.checkGameOver();\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const oldBoard = JSON.stringify(this.board);\n\n    for (let r = 0; r < this.board.length; r++) {\n      let row = this.board[r];\n\n      row = row.reverse();\n      row = this.stack(row);\n      row = this.merge(row);\n      row = this.stack(row);\n      row = row.reverse();\n      this.board[r] = row;\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    if (oldBoard === newBoard) {\n      return;\n    }\n\n    this.checkWin();\n    this.addRandomCell();\n    this.checkGameOver();\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const oldBoard = JSON.stringify(this.board);\n\n    for (let c = 0; c < this.board.length; c++) {\n      let col = this.board.map((r) => r[c]);\n\n      col = this.stack(col);\n      col = this.merge(col);\n      col = this.stack(col);\n      this.updateColumn(c, col);\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    if (oldBoard === newBoard) {\n      return;\n    }\n\n    this.checkWin();\n    this.addRandomCell();\n    this.checkGameOver();\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const oldBoard = JSON.stringify(this.board);\n\n    for (let c = 0; c < this.board.length; c++) {\n      let col = this.board.map((r) => r[c]);\n\n      col = col.reverse();\n      col = this.stack(col);\n      col = this.merge(col);\n      col = this.stack(col);\n      col = col.reverse();\n      this.updateColumn(c, col);\n    }\n\n    const newBoard = JSON.stringify(this.board);\n\n    if (oldBoard === newBoard) {\n      return;\n    }\n\n    this.checkWin();\n    this.addRandomCell();\n    this.checkGameOver();\n  }\n\n  updateColumn(c, col) {\n    for (let r = 0; r < this.board.length; r++) {\n      this.board[r][c] = col[r];\n    }\n  }\n\n  filterZero(arr) {\n    return arr.filter((num) => num !== 0);\n  }\n\n  stack(arr) {\n    const newArr = this.filterZero(arr);\n\n    while (newArr.length < this.board.length) {\n      newArr.push(0);\n    }\n\n    return newArr;\n  }\n\n  merge(arr) {\n    for (let i = 0; i < arr.length - 1; i++) {\n      if (arr[i] === arr[i + 1] && arr[i] !== 0) {\n        arr[i] *= 2;\n        arr[i + 1] = 0;\n        this.score += arr[i];\n      }\n    }\n\n    return arr;\n  }\n\n  checkWin() {\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n    }\n  }\n\n  checkGameOver() {\n    if (this.board.flat().includes(0)) {\n      return;\n    }\n\n    if (!this.checkHorizontal() && !this.checkVertical()) {\n      this.status = 'lose';\n    }\n  }\n\n  checkHorizontal() {\n    for (let r = 0; r < this.board.length; r++) {\n      for (let c = 0; c < this.board.length - 1; c++) {\n        if (this.board[r][c] === this.board[r][c + 1]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkVertical() {\n    for (let r = 0; r < this.board.length - 1; r++) {\n      for (let c = 0; c < this.board.length; c++) {\n        if (this.board[r][c] === this.board[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  addRandomCell() {\n    const emptyCells = this.board.reduce((acc, currentRow, rowIndex) => {\n      currentRow.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          acc.push([rowIndex, colIndex]);\n        }\n      });\n\n      return acc;\n    }, []);\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [row, col] =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomCell();\n    this.addRandomCell();\n  }\n\n  restart() {\n    this.board = Game.INITIAL_STATE.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","key","value","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","INITIAL_STATE","instance","Constructor","board","map","row","score","status","oldBoard","JSON","stringify","r","stack","merge","checkWin","addRandomCell","checkGameOver","reverse","_this","_loop","c","col","updateColumn","filter","num","newArr","filterZero","push","flat","includes","checkHorizontal","checkVertical","emptyCells","reduce","acc","currentRow","rowIndex","forEach","cell","colIndex","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$cells","document","querySelectorAll","$197cd56b15c33885$var$scoreContainer","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$updateUI","state","getState","cellValue","textContent","className","concat","getScore","getStatus","classList","remove","add","addEventListener","start","restart","e","moveLeft","moveRight","moveUp","moveDown","preventDefault"],"version":3,"file":"index.eb8a7b9f.js.map"}